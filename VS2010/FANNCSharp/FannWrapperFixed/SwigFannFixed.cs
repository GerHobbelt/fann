//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

using FannWrapper;
namespace FannWrapperFixed {

public class SwigFannFixed {
  public static SWIGTYPE_p_p_char FANN_TRAIN_NAMES {
    get {
      global::System.IntPtr cPtr = SwigFannFixedPINVOKE.FANN_TRAIN_NAMES_get();
      SWIGTYPE_p_p_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_char(cPtr, false);
      return ret;
    } 
  }

  public static SWIGTYPE_p_p_char FANN_ACTIVATIONFUNC_NAMES {
    get {
      global::System.IntPtr cPtr = SwigFannFixedPINVOKE.FANN_ACTIVATIONFUNC_NAMES_get();
      SWIGTYPE_p_p_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_char(cPtr, false);
      return ret;
    } 
  }

  public static SWIGTYPE_p_p_char FANN_ERRORFUNC_NAMES {
    get {
      global::System.IntPtr cPtr = SwigFannFixedPINVOKE.FANN_ERRORFUNC_NAMES_get();
      SWIGTYPE_p_p_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_char(cPtr, false);
      return ret;
    } 
  }

  public static SWIGTYPE_p_p_char FANN_STOPFUNC_NAMES {
    get {
      global::System.IntPtr cPtr = SwigFannFixedPINVOKE.FANN_STOPFUNC_NAMES_get();
      SWIGTYPE_p_p_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_char(cPtr, false);
      return ret;
    } 
  }

  public static SWIGTYPE_p_p_char FANN_NETTYPE_NAMES {
    get {
      global::System.IntPtr cPtr = SwigFannFixedPINVOKE.FANN_NETTYPE_NAMES_get();
      SWIGTYPE_p_p_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_char(cPtr, false);
      return ret;
    } 
  }

  public static SWIGTYPE_p_FILE fopen(string filename, string mode) {
    global::System.IntPtr cPtr = SwigFannFixedPINVOKE.fopen(filename, mode);
    SWIGTYPE_p_FILE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FILE(cPtr, false);
    return ret;
  }

  public static readonly string FANNPRINTF = SwigFannFixedPINVOKE.FANNPRINTF_get();
  public static readonly string FANNSCANF = SwigFannFixedPINVOKE.FANNSCANF_get();
}

}
