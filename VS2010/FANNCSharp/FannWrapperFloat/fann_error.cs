//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

using FannWrapper;
namespace FannWrapperFloat {

public class fann_error : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal fann_error(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(fann_error obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~fann_error() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          SwigFannFloatPINVOKE.delete_fann_error(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_fann_errno_enum errno_f {
    set {
      SwigFannFloatPINVOKE.fann_error_errno_f_set(swigCPtr, (int)value);
    } 
    get {
      SWIGTYPE_fann_errno_enum ret = (SWIGTYPE_fann_errno_enum)SwigFannFloatPINVOKE.fann_error_errno_f_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_FILE error_log {
    set {
      SwigFannFloatPINVOKE.fann_error_error_log_set(swigCPtr, SWIGTYPE_p_FILE.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = SwigFannFloatPINVOKE.fann_error_error_log_get(swigCPtr);
      SWIGTYPE_p_FILE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FILE(cPtr, false);
      return ret;
    } 
  }

  public string errstr {
    set {
      SwigFannFloatPINVOKE.fann_error_errstr_set(swigCPtr, value);
    } 
    get {
      string ret = SwigFannFloatPINVOKE.fann_error_errstr_get(swigCPtr);
      return ret;
    } 
  }

  public fann_error() : this(SwigFannFloatPINVOKE.new_fann_error(), true) {
  }

}

}
