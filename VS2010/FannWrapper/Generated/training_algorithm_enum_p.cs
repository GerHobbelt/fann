//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace FannWrap {

public class training_algorithm_enum_p : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal training_algorithm_enum_p(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(training_algorithm_enum_p obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~training_algorithm_enum_p() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          SwigFannPINVOKE.delete_training_algorithm_enum_p(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public training_algorithm_enum_p() : this(SwigFannPINVOKE.new_training_algorithm_enum_p(), true) {
  }

  public void assign(SWIGTYPE_p_training_algorithm_enum value) {
    SwigFannPINVOKE.training_algorithm_enum_p_assign(swigCPtr, SWIGTYPE_p_training_algorithm_enum.getCPtr(value));
    if (SwigFannPINVOKE.SWIGPendingException.Pending) throw SwigFannPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_training_algorithm_enum value() {
    SWIGTYPE_p_training_algorithm_enum ret = new SWIGTYPE_p_training_algorithm_enum(SwigFannPINVOKE.training_algorithm_enum_p_value(swigCPtr), true);
    return ret;
  }

  public SWIGTYPE_p_training_algorithm_enum cast() {
    global::System.IntPtr cPtr = SwigFannPINVOKE.training_algorithm_enum_p_cast(swigCPtr);
    SWIGTYPE_p_training_algorithm_enum ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_training_algorithm_enum(cPtr, false);
    return ret;
  }

  public static training_algorithm_enum_p frompointer(SWIGTYPE_p_training_algorithm_enum t) {
    global::System.IntPtr cPtr = SwigFannPINVOKE.training_algorithm_enum_p_frompointer(SWIGTYPE_p_training_algorithm_enum.getCPtr(t));
    training_algorithm_enum_p ret = (cPtr == global::System.IntPtr.Zero) ? null : new training_algorithm_enum_p(cPtr, false);
    return ret;
  }

}

}
